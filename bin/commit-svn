#!/bin/sh

# Deploys a tag of the plugin into the WP SVN.

TAG_PATH=tags
TRUNK_PATH=trunk
PREFIX=/tmp
PPWDt=`pwd`
TAG_PREFIX="v"
NEW_TAG=${1#"$TAG_PREFIX"}

if [ -z $SVNURL ]; then
	>&2 echo "Env variable SVNURL is missing"
	exit 1
fi

if [ -z $NEW_TAG ]; then
	>&2 echo "Tag argument is missing"
	exit 2
fi

grep "= $NEW_TAG =" readme.txt > /dev/null

if [ $? -ne 0 ]; then
	>&2 echo "Missing changelog entry for tag $NEW_TAG"
	exit 3
fi

RELEASE_DIR=`mktemp -d`
>&2 echo "RELEASE_DIR is $RELEASE_DIR"

PREFIX=$RELEASE_DIR make release
cd "$RELEASE_DIR/onoffice"

# Set new stable tag in readme.txt. (For details, see https://developer.wordpress.org/plugins/wordpress-org/how-your-readme-txt-works/#how-the-readme-is-parsed)

if [ "$2" = "--stable" ]; then
	ed readme.txt <<EDSCRIPT
7
i
Stable tag: $NEW_TAG
.
w
q
EDSCRIPT
fi

TEMPDIR_CHECKOUT=`mktemp -d`
>&2 echo "TEMPDIR_CHECKOUT is $TEMPDIR_CHECKOUT"

svn co "${SVNURL}/${TRUNK_PATH}" "$TEMPDIR_CHECKOUT" || exit 4;

cd "$TEMPDIR_CHECKOUT";

WD=`pwd`

if [ "${WD%%/tmp/*}" ]; then
	>&2 echo "Not working in /tmp/, exiting! tmp dir is: $TEMPDIR_CHECKOUT";
	exit 5
fi

# Clean out the entire folder except for SVN-related files.

find . ! -path './.svn' ! -path './.svn/*' ! -path '.' ! -path '.svn' -type d -exec rm -rf {} +
find . ! -path './.svn/*' ! -path '.' ! -path '.svn/*' -type f -exec rm -f {} +

# Copy over the built files.

cp -R $RELEASE_DIR/onoffice/* .

# Add the built files to SVN.

svn add . --force

# SVN does not automatically detect which files were removed, so we need to tell it.
# In `svn status`, "missing" files are marked with a ! at the beginning of the line, so we can `svn rm` all those files to let SVN know which files are no longer needed.
svn status | grep ^! | awk '{$1=""; print " --force \""substr($0,2)"@\"" }' | xargs -r svn rm

# Commit to trunk and add a new tag.
svn commit -m "Import tag '$NEW_TAG' to trunk" --non-interactive --username "${SVN_USER}" --password "${SVN_PASSWORD}" || exit 6;
svn copy --username "${SVN_USER}" --password "${SVN_PASSWORD}" --non-interactive "${SVNURL}/${TRUNK_PATH}" "${SVNURL}/${TAG_PATH}/$NEW_TAG" -m "Create tag '$NEW_TAG'"

exit $?