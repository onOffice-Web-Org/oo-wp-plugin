(function($){$((function(){$(document).ready((function(){$("#oo-galleryslide").slick({infinite:true,slidesToShow:1});$("#oo-similarframe").slick({infinite:true,arrows:false,dots:true,autoplay:true,slidesToShow:3,slidesToScroll:1,responsive:[{breakpoint:991,settings:{slidesToShow:2}},{breakpoint:575,settings:{slidesToShow:1}}]});if($(".oo-costs-overview").length){initializeDonutChart()}function initializeDonutChart(){const colors=["#3F9DE4","#3ac411","#9C27B0","#D81B60","#FEC800"];const data=[];let totalCosts=0;$(".oo-costs-overview > div").each((function(index){const value=$(this).attr("data-value");const totalCostsValue=$(this).attr("total-costs-value");if(!isNaN(value)){data.push({value:value,color:colors[index]});$(this).find(".color-indicator").css("background-color",colors[index])}if(!isNaN(totalCostsValue)){totalCosts=totalCostsValue}}));let start=0;let gradientString="conic-gradient(";data.forEach((item=>{const percentage=item.value/totalCosts*100;const end=start+percentage;gradientString+=`${item.color} ${start.toFixed(2)}% ${end.toFixed(2)}%, `;start=end}));gradientString=gradientString.slice(0,-2)+")";$(".oo-donut-chart").css("background",gradientString)}applyGradientToSegments();function applyGradientToSegments(){const segments=$(".oo-details-energy-certificate .energy-certificate-container .segment");if(segments.length===0)return;const colors={start:[0,128,0],middle:[255,185,0],end:[255,0,0]};segments.each((function(index){const positionRatio=index/(segments.length-1);const isInInitialSegment=positionRatio<.5;const normalizedPosition=isInInitialSegment?positionRatio*2:(positionRatio-.5)*2;const color=calculateColor(isInInitialSegment?colors.start:colors.middle,isInInitialSegment?colors.middle:colors.end,normalizedPosition);const nextColor=calculateColor(isInInitialSegment?colors.start:colors.middle,isInInitialSegment?colors.middle:colors.end,normalizedPosition+1/(segments.length-1));$(this).css("background",`linear-gradient(to right, rgb(${color.join(",")}), rgb(${nextColor.join(",")}))`)}))}function calculateColor(start,end,positionRatio){return start.map(((startValue,i)=>Math.round(startValue+positionRatio*(end[i]-startValue))))}}))}))})(jQuery);